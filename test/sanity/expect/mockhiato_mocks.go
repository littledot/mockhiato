package example

// Auto-generated by Mockhiato
import (
	bytes "bytes"
	json "encoding/json"
	png "image/png"
	os "os"
	time "time"

	mock "github.com/stretchr/testify/mock"
)

// AMock implements example.A
type AMock struct{ mock.Mock }

// Hello implements (example.A).Hello
func (r *AMock) Hello(p0 string) (int, error) {
	ret := r.Called(p0)
	ret0 := ret.Get(0).(int)
	ret1 := ret.Get(1).(error)
	return ret0, ret1
}

// IsDir implements (example.A).IsDir
func (r *AMock) IsDir() bool {
	ret := r.Called()
	ret0 := ret.Get(0).(bool)
	return ret0
}

// ModTime implements (example.A).ModTime
func (r *AMock) ModTime() time.Time {
	ret := r.Called()
	ret0 := ret.Get(0).(time.Time)
	return ret0
}

// Mode implements (example.A).Mode
func (r *AMock) Mode() os.FileMode {
	ret := r.Called()
	ret0 := ret.Get(0).(os.FileMode)
	return ret0
}

// Name implements (example.A).Name
func (r *AMock) Name() string {
	ret := r.Called()
	ret0 := ret.Get(0).(string)
	return ret0
}

// No implements (example.A).No
func (r *AMock) No(p0 *json.Decoder) *bytes.Buffer {
	ret := r.Called(p0)
	ret0 := ret.Get(0).(*bytes.Buffer)
	return ret0
}

// Size implements (example.A).Size
func (r *AMock) Size() int64 {
	ret := r.Called()
	ret0 := ret.Get(0).(int64)
	return ret0
}

// Sys implements (example.A).Sys
func (r *AMock) Sys() interface{} {
	ret := r.Called()
	ret0 := ret.Get(0).(interface{})
	return ret0
}

// World implements (example.A).World
func (r *AMock) World(p0 int, p1 ...string) map[int]interface{} {
	ret := r.Called(p0, p1)
	ret0 := ret.Get(0).(map[int]interface{})
	return ret0
}

// Yes implements (example.A).Yes
func (r *AMock) Yes(p0 os.FileInfo) (*png.Encoder, error) {
	ret := r.Called(p0)
	ret0 := ret.Get(0).(*png.Encoder)
	ret1 := ret.Get(1).(error)
	return ret0, ret1
}

// BMock implements example.B
type BMock struct{ mock.Mock }

// No implements (example.B).No
func (r *BMock) No(p0 *json.Decoder) *bytes.Buffer {
	ret := r.Called(p0)
	ret0 := ret.Get(0).(*bytes.Buffer)
	return ret0
}
